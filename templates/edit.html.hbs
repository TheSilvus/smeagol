{{#> base.html}}

    {{#*inline "title"}}
        Editing {{path}} - Smeagol
    {{/inline}}

    {{#*inline "page"}}
        <h1>{{path}}</h1>
        {{#if content}}
            <textarea id="input-content" cols="120" rows="30">{{content}}</textarea> <br>
        {{else}}
            <p>The file you are attempting to edit contains binary values. Editing it as text may cause data loss.</p>
            <textarea id="input-content" cols="120" rows="30"></textarea> <br>
        {{/if}}

        <input id="input-commit-message" value="Edited {{path}}"> <br>

        <input id="file-upload" type="file"> <button onclick="upload()">Upload</button> <br>

        <button onclick="save()">Save</button>
        <button onclick="discard()">Discard</button>

        <script>
            window.onbeforeunload = function() {
                return true;
            }   

            function save() {
                let content = document.getElementById("input-content").value;
                let commit_message = document.getElementById("input-commit-message").value;

                postFile(location.pathname, commit_message, content);
            }

            function upload() {
                let files = document.getElementById("file-upload").files;
                if (files.length == 0) {
                    alert("No file selected.");
                    return;
                }

                let file = files[0];
                // TODO use value from config here
                if (file.size > 1000000) {
                    alert("The file is too big.");
                    return;
                }

                let commit_message = document.getElementById("input-commit-message").value;

                postFile(location.pathname, commit_message, file);
            }

            function postFile(url, message, content) {
                url += "?commit_message=" + message;

                return axios.post(url, content)
                    .then(function(response) {
                        window.onbeforeunload = undefined;
                        location.assign(response.data.path);
                    })
                    .catch(function(err) {
                        console.log({"err": err});
                        if (err.response.status == 400) {
                            alert(err.response.data.error);
                        } else {
                            console.log(err);
                            console.log({"err": err});
                            alert("Internal error.");
                        }
                    });
            }

            function discard() {
                location.assign(location.pathname);
            }
        </script>
    {{/inline}}

{{/base.html}}
